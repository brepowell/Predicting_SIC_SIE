Starting job on nid003941 at Sat 02 Aug 2025 05:25:24 PM PDT
Running Python script...
Xarray version 2025.6.1
Numpy version 2.2.6
Total nCells:        465044
Mask size:           53973
cells_per_patch:     256
n_patches:           210
fd_nTM_D128_B16_lt40_P210_L256_T7_Fh3_e10_LSD
System Version: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:45:41) [GCC 13.3.0]
Pandas version 2.3.1
Matplotlib version 3.10.5
PyTorch version 2.5.1
Seaborn version 0.13.2
4
Processor Name: x86_64
Physical Cores: 64
Logical Cores: 128
Current CPU Frequency: 2597.74 MHz
Min CPU Frequency: 1500.00 MHz
Max CPU Frequency: 2450.00 MHz
Total CPU Usage: 0.2%
31
<xarray.DataArray 'xtime_startDaily' (Time: 31)> Size: 2kB
[31 values with dtype=|S64]
Dimensions without coordinates: Time
[b'2024-12-01_00:00:00' b'2024-12-02_00:00:00' b'2024-12-03_00:00:00'
 b'2024-12-04_00:00:00' b'2024-12-05_00:00:00' b'2024-12-06_00:00:00'
 b'2024-12-07_00:00:00' b'2024-12-08_00:00:00' b'2024-12-09_00:00:00'
 b'2024-12-10_00:00:00' b'2024-12-11_00:00:00' b'2024-12-12_00:00:00'
 b'2024-12-13_00:00:00' b'2024-12-14_00:00:00' b'2024-12-15_00:00:00'
 b'2024-12-16_00:00:00' b'2024-12-17_00:00:00' b'2024-12-18_00:00:00'
 b'2024-12-19_00:00:00' b'2024-12-20_00:00:00' b'2024-12-21_00:00:00'
 b'2024-12-22_00:00:00' b'2024-12-23_00:00:00' b'2024-12-24_00:00:00'
 b'2024-12-25_00:00:00' b'2024-12-26_00:00:00' b'2024-12-27_00:00:00'
 b'2024-12-28_00:00:00' b'2024-12-29_00:00:00' b'2024-12-30_00:00:00'
 b'2024-12-31_00:00:00']
Fraction of grid cell covered in sea ice
Shape of ice area variable: (31, 465044)
Ice volume per unit area of grid cell
Shape of ice area variable: (31, 465044)
Coordinates:
    *empty*
FrozenMappingWarningOnValuesAccess({'Time': 31, 'nCells': 465044, 'nVertices': 942873})
<xarray.Dataset> Size: 407MB
Dimensions:                       (Time: 31, nCells: 465044, nVertices: 942873)
Dimensions without coordinates: Time, nCells, nVertices
Data variables:
    timeDaily_counter             (Time) int32 124B ...
    xtime_startDaily              (Time) |S64 2kB b'2024-12-01_00:00:00' ... ...
    xtime_endDaily                (Time) |S64 2kB ...
    timeDaily_avg_iceAreaCell     (Time, nCells) float32 58MB ...
    timeDaily_avg_iceVolumeCell   (Time, nCells) float32 58MB ...
    timeDaily_avg_snowVolumeCell  (Time, nCells) float32 58MB ...
    timeDaily_avg_uVelocityGeo    (Time, nVertices) float32 117MB ...
    timeDaily_avg_vVelocityGeo    (Time, nVertices) float32 117MB ...
Attributes: (12/490)
    case:                                                         v3.LR.histo...
    source_id:                                                    399d430113
    realm:                                                        seaIce
    product:                                                      model-output
    title:                                                        MPAS-Seaice...
    source:                                                       E3SM Sea Ic...
    ...                                                           ...
    config_AM_timeSeriesStatsCustom_reference_times:              initial_time
    config_AM_timeSeriesStatsCustom_duration_intervals:           repeat_inte...
    config_AM_timeSeriesStatsCustom_repeat_intervals:             reset_interval
    config_AM_timeSeriesStatsCustom_reset_intervals:              00-00-07_00...
    config_AM_timeSeriesStatsCustom_backward_output_offset:       00-00-01_00...
    file_id:                                                      w89d6aw0xo
Latitude location of cell centers in radians.
Longitude location of cell centers in radians.
List of cells that neighbor each cell.
[[     5      4      0      0      0      0]
 [    12     11      9      8      0      3]
 [     4     13     12      2      0      0]
 ...
 [465043      0 465040 465041      0      0]
 [     0 465042      0 465044      0      0]
 [     0      0      0      0 465043      0]]
6
465044
0
Coordinates:
    *empty*
FrozenMappingWarningOnValuesAccess({'nEdges': 1408196, 'maxEdges2': 12, 'TWO': 2, 'nVertices': 942873, 'vertexDegree': 3, 'nCells': 465044, 'maxEdges': 6, 'Time': 1})
<xarray.Dataset> Size: 509MB
Dimensions:            (nEdges: 1408196, maxEdges2: 12, TWO: 2,
                        nVertices: 942873, vertexDegree: 3, nCells: 465044,
                        maxEdges: 6, Time: 1)
Dimensions without coordinates: nEdges, maxEdges2, TWO, nVertices,
                                vertexDegree, nCells, maxEdges, Time
Data variables: (12/40)
    edgesOnEdge        (nEdges, maxEdges2) int32 68MB ...
    weightsOnEdge      (nEdges, maxEdges2) float64 135MB ...
    cellsOnEdge        (nEdges, TWO) int32 11MB ...
    verticesOnEdge     (nEdges, TWO) int32 11MB ...
    angleEdge          (nEdges) float64 11MB ...
    dcEdge             (nEdges) float64 11MB ...
    ...                 ...
    nEdgesOnCell       (nCells) int32 2MB ...
    xCell              (nCells) float64 4MB ...
    yCell              (nCells) float64 4MB ...
    zCell              (nCells) float64 4MB ...
    fCell              (nCells) float64 4MB ...
    landIceMask        (Time, nCells) int32 2MB ...
Attributes: (12/1313)
    model_name:                                                      mpas
    core_name:                                                       ocean
    source:                                                          MPAS
    Conventions:                                                     MPAS
    git_version:                                                     v2.1.0-1...
    on_a_sphere:                                                     YES
    ...                                                              ...
    MPAS_Mesh_NCO_Version:                                           5.1.9
    MPAS_Mesh_ESMF_Version:                                          8.4.2
    MPAS_Mesh_geometric_features_Version:                            1.3.0
    MPAS_Mesh_Metis_Version:                                         5.1.1
    MPAS_Mesh_pyremap_Version:                                       1.2.0
    NCO:                                                             netCDF O...
===== Making the Dataset Class: TRIAL_RUN MODE IS False ===== 
Cluster sizes:
min size 256
max size 256
smallest count (np.int64(114), 256)
max count (np.int64(15), 256)
number of patches: 210
Elapsed time for DailyNetCDFDataset __init__: 1797.6755645275116 seconds
In minutes:                29.0 minutes
========== SPLITTING THE DATASET ===================
Training data length:    59130
Validation data length:  2190
Testing data length:     2555
Total days =  63875
Number of training batches 3695
Number of training batches 136
Number of test batches after drop_last incomplete batch 159
Number of test days to drop after drop_last incomplete batch 159
===== Printing Dataset ===== 
<DailyNetCDFDataset: 63866 days, 53973 cells/day, 2100 files loaded, Patchify Algorithm: lon_spilldown>
===== Sample at dataset[0] ===== 
Fetched start index 0: Time=1850-01-01T00:30:00
Fetched end   index 7: Time=1850-01-08T00:00:00
Fetched target start index 7: Time=1850-01-08T00:00:00
Fetched target end   index 10: Time=1850-01-11T00:00:00
===== Start and End Dates for Each Set =====
Training set start date: 1850-01-01T00:30:00
Training set end date: 2011-12-31T00:00:00
Validation set start date: 2012-01-01T00:00:00
Validation set end date: 2017-12-31T00:00:00
Testing set start date: 2018-01-01T00:00:00
Testing set end date: 2024-12-31T00:00:00
===== Starting DataLoader ====
input_tensor should be of shape (context_length, num_patches, num_features, patch_size)
actual input_tensor.shape = torch.Size([7, 210, 2, 256])
target_tensor should be of shape (forecast_horizon, num_patches, patch_size)
actual target_tensor.shape = torch.Size([3, 210, 256])
Calling IceForecastTransformer __init__
Elapsed time: 0.03 seconds
End of IceForecastTransformer __init__

--- Model Architecture ---
IceForecastTransformer(
  (patch_embed): Linear(in_features=512, out_features=128, bias=True)
  (encoder): TransformerEncoder(
    (layers): ModuleList(
      (0-3): 4 x TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
        )
        (linear1): Linear(in_features=128, out_features=512, bias=True)
        (dropout): Dropout(p=0.1, inplace=False)
        (linear2): Linear(in_features=512, out_features=128, bias=True)
        (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.1, inplace=False)
        (dropout2): Dropout(p=0.1, inplace=False)
      )
    )
  )
  (mlp_head): Sequential(
    (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    (1): Linear(in_features=128, out_features=768, bias=True)
    (2): Sigmoid()
  )
)
--------------------------

Epoch 1/10 - Train Loss: 0.0749
Validation Loss: 0.0232
Epoch 2/10 - Train Loss: 0.0147
Validation Loss: 0.0079
Epoch 3/10 - Train Loss: 0.0074
Validation Loss: 0.0063
Epoch 4/10 - Train Loss: 0.0059
Validation Loss: 0.0061
Epoch 5/10 - Train Loss: 0.0052
Validation Loss: 0.0048
Epoch 6/10 - Train Loss: 0.0049
Validation Loss: 0.0047
Epoch 7/10 - Train Loss: 0.0047
Validation Loss: 0.0044
Epoch 8/10 - Train Loss: 0.0045
Validation Loss: 0.0042
Epoch 9/10 - Train Loss: 0.0043
Validation Loss: 0.0041
Epoch 10/10 - Train Loss: 0.0042
Validation Loss: 0.0045
===============================================
Elapsed time for TRAINING: 2954.27 seconds
===============================================
Saved model at fd_nTM_D128_B16_lt40_P210_L256_T7_Fh3_e10_LSD_model.pth
Calling IceForecastTransformer __init__
Elapsed time: 0.01 seconds
End of IceForecastTransformer __init__
Model loaded successfully!
Metrics saved as fd_nTM_D128_B16_lt40_P210_L256_T7_Fh3_e10_LSD_Metrics.txt
Shape of sample_x torch.Size([16, 7, 210, 2, 256])
Shape of sample_y torch.Size([16, 3, 210, 256])
Fetched sample_x start index tensor([61320, 61321, 61322, 61323, 61324, 61325, 61326, 61327, 61328, 61329,
        61330, 61331, 61332, 61333, 61334, 61335]): Time=['2018-01-01T00:00:00' '2018-01-02T00:00:00' '2018-01-03T00:00:00'
 '2018-01-04T00:00:00' '2018-01-05T00:00:00' '2018-01-06T00:00:00'
 '2018-01-07T00:00:00' '2018-01-08T00:00:00' '2018-01-09T00:00:00'
 '2018-01-10T00:00:00' '2018-01-11T00:00:00' '2018-01-12T00:00:00'
 '2018-01-13T00:00:00' '2018-01-14T00:00:00' '2018-01-15T00:00:00'
 '2018-01-16T00:00:00']
Fetched sample_x end   index tensor([61327, 61328, 61329, 61330, 61331, 61332, 61333, 61334, 61335, 61336,
        61337, 61338, 61339, 61340, 61341, 61342]):   Time=['2018-01-08T00:00:00' '2018-01-09T00:00:00' '2018-01-10T00:00:00'
 '2018-01-11T00:00:00' '2018-01-12T00:00:00' '2018-01-13T00:00:00'
 '2018-01-14T00:00:00' '2018-01-15T00:00:00' '2018-01-16T00:00:00'
 '2018-01-17T00:00:00' '2018-01-18T00:00:00' '2018-01-19T00:00:00'
 '2018-01-20T00:00:00' '2018-01-21T00:00:00' '2018-01-22T00:00:00'
 '2018-01-23T00:00:00']
Fetched sample_y (target) start index tensor([61330, 61331, 61332, 61333, 61334, 61335, 61336, 61337, 61338, 61339,
        61340, 61341, 61342, 61343, 61344, 61345]): Time=['2018-01-11T00:00:00' '2018-01-12T00:00:00' '2018-01-13T00:00:00'
 '2018-01-14T00:00:00' '2018-01-15T00:00:00' '2018-01-16T00:00:00'
 '2018-01-17T00:00:00' '2018-01-18T00:00:00' '2018-01-19T00:00:00'
 '2018-01-20T00:00:00' '2018-01-21T00:00:00' '2018-01-22T00:00:00'
 '2018-01-23T00:00:00' '2018-01-24T00:00:00' '2018-01-25T00:00:00'
 '2018-01-26T00:00:00']
Fetched sample_y (target) end   index tensor([61330, 61331, 61332, 61333, 61334, 61335, 61336, 61337, 61338, 61339,
        61340, 61341, 61342, 61343, 61344, 61345]): Time=['2018-01-11T00:00:00' '2018-01-12T00:00:00' '2018-01-13T00:00:00'
 '2018-01-14T00:00:00' '2018-01-15T00:00:00' '2018-01-16T00:00:00'
 '2018-01-17T00:00:00' '2018-01-18T00:00:00' '2018-01-19T00:00:00'
 '2018-01-20T00:00:00' '2018-01-21T00:00:00' '2018-01-22T00:00:00'
 '2018-01-23T00:00:00' '2018-01-24T00:00:00' '2018-01-25T00:00:00'
 '2018-01-26T00:00:00']
Sample x for inference shape (reshaped): torch.Size([16, 7, 210, 512])
Predicted y patches shape: torch.Size([16, 3, 210, 256])
Expected shape: (B, forecast_horizon, NUM_PATCHES, CELLS_PER_PATCH) ex., (16, 3, 140, 256)
Predicted ice area for Day 0 (specific day) shape: torch.Size([16, 210, 256])
Actual ice area for Day 0 (specific day) shape: torch.Size([16, 210, 256])
Processing forecast day 0: Predicted shape torch.Size([16, 210, 256]), Actual shape torch.Size([16, 210, 256])
Processing forecast day 1: Predicted shape torch.Size([16, 210, 256]), Actual shape torch.Size([16, 210, 256])
Processing forecast day 2: Predicted shape torch.Size([16, 210, 256]), Actual shape torch.Size([16, 210, 256])
Job finished at Sat 02 Aug 2025 06:50:54 PM PDT
